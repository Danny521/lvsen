<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lvsen.modules.business.mapper.GoodsUnitMapper" >
  <resultMap id="BaseResultMap" type="com.lvsen.modules.business.pojo.GoodsUnit" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="goods_id" property="goodsId" jdbcType="INTEGER" />
    <result column="is_scan" property="isScan" jdbcType="BIT" />
    <result column="client_category_id" property="clientCategoryId" jdbcType="INTEGER" />
    <result column="unit_level" property="unitLevel" jdbcType="INTEGER" />
    <result column="unit_name" property="unitName" jdbcType="INTEGER" />
    <result column="capacity" property="capacity" jdbcType="INTEGER" />
    <result column="is_min_unit" property="isMinUnit" jdbcType="BIT" />
    <result column="min_price" property="minPrice" jdbcType="REAL" />
    <result column="sale_price" property="salePrice" jdbcType="REAL" />
    <result column="weight" property="weight" jdbcType="REAL" />
    <result column="volume" property="volume" jdbcType="REAL" />
    <result column="status" property="status" jdbcType="BIT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, goods_id, is_scan, client_category_id, unit_level, unit_name, capacity, is_min_unit, 
    min_price, sale_price, weight, volume, status, remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lvsen.modules.business.pojo.GoodsUnitExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods_unit
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from goods_unit
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from goods_unit
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lvsen.modules.business.pojo.GoodsUnitExample" >
    delete from goods_unit
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lvsen.modules.business.pojo.GoodsUnit" useGeneratedKeys="true" keyProperty="id" >
    insert into goods_unit (goods_id, is_scan, client_category_id, 
      unit_level, unit_name, capacity, 
      is_min_unit, min_price, sale_price, 
      weight, volume, status, remark
      )
    values (#{goodsId,jdbcType=INTEGER}, #{isScan,jdbcType=BIT}, #{clientCategoryId,jdbcType=INTEGER}, 
      #{unitLevel,jdbcType=INTEGER}, #{unitName,jdbcType=INTEGER}, #{capacity,jdbcType=INTEGER}, 
      #{isMinUnit,jdbcType=BIT}, #{minPrice,jdbcType=REAL}, #{salePrice,jdbcType=REAL}, 
      #{weight,jdbcType=REAL}, #{volume,jdbcType=REAL}, #{status,jdbcType=BIT}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lvsen.modules.business.pojo.GoodsUnit" useGeneratedKeys="true" keyProperty="id" >
    insert into goods_unit
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="isScan != null" >
        is_scan,
      </if>
      <if test="clientCategoryId != null" >
        client_category_id,
      </if>
      <if test="unitLevel != null" >
        unit_level,
      </if>
      <if test="unitName != null" >
        unit_name,
      </if>
      <if test="capacity != null" >
        capacity,
      </if>
      <if test="isMinUnit != null" >
        is_min_unit,
      </if>
      <if test="minPrice != null" >
        min_price,
      </if>
      <if test="salePrice != null" >
        sale_price,
      </if>
      <if test="weight != null" >
        weight,
      </if>
      <if test="volume != null" >
        volume,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="goodsId != null" >
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="isScan != null" >
        #{isScan,jdbcType=BIT},
      </if>
      <if test="clientCategoryId != null" >
        #{clientCategoryId,jdbcType=INTEGER},
      </if>
      <if test="unitLevel != null" >
        #{unitLevel,jdbcType=INTEGER},
      </if>
      <if test="unitName != null" >
        #{unitName,jdbcType=INTEGER},
      </if>
      <if test="capacity != null" >
        #{capacity,jdbcType=INTEGER},
      </if>
      <if test="isMinUnit != null" >
        #{isMinUnit,jdbcType=BIT},
      </if>
      <if test="minPrice != null" >
        #{minPrice,jdbcType=REAL},
      </if>
      <if test="salePrice != null" >
        #{salePrice,jdbcType=REAL},
      </if>
      <if test="weight != null" >
        #{weight,jdbcType=REAL},
      </if>
      <if test="volume != null" >
        #{volume,jdbcType=REAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lvsen.modules.business.pojo.GoodsUnitExample" resultType="java.lang.Integer" >
    select count(*) from goods_unit
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update goods_unit
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null" >
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.isScan != null" >
        is_scan = #{record.isScan,jdbcType=BIT},
      </if>
      <if test="record.clientCategoryId != null" >
        client_category_id = #{record.clientCategoryId,jdbcType=INTEGER},
      </if>
      <if test="record.unitLevel != null" >
        unit_level = #{record.unitLevel,jdbcType=INTEGER},
      </if>
      <if test="record.unitName != null" >
        unit_name = #{record.unitName,jdbcType=INTEGER},
      </if>
      <if test="record.capacity != null" >
        capacity = #{record.capacity,jdbcType=INTEGER},
      </if>
      <if test="record.isMinUnit != null" >
        is_min_unit = #{record.isMinUnit,jdbcType=BIT},
      </if>
      <if test="record.minPrice != null" >
        min_price = #{record.minPrice,jdbcType=REAL},
      </if>
      <if test="record.salePrice != null" >
        sale_price = #{record.salePrice,jdbcType=REAL},
      </if>
      <if test="record.weight != null" >
        weight = #{record.weight,jdbcType=REAL},
      </if>
      <if test="record.volume != null" >
        volume = #{record.volume,jdbcType=REAL},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update goods_unit
    set id = #{record.id,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      is_scan = #{record.isScan,jdbcType=BIT},
      client_category_id = #{record.clientCategoryId,jdbcType=INTEGER},
      unit_level = #{record.unitLevel,jdbcType=INTEGER},
      unit_name = #{record.unitName,jdbcType=INTEGER},
      capacity = #{record.capacity,jdbcType=INTEGER},
      is_min_unit = #{record.isMinUnit,jdbcType=BIT},
      min_price = #{record.minPrice,jdbcType=REAL},
      sale_price = #{record.salePrice,jdbcType=REAL},
      weight = #{record.weight,jdbcType=REAL},
      volume = #{record.volume,jdbcType=REAL},
      status = #{record.status,jdbcType=BIT},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lvsen.modules.business.pojo.GoodsUnit" >
    update goods_unit
    <set >
      <if test="goodsId != null" >
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="isScan != null" >
        is_scan = #{isScan,jdbcType=BIT},
      </if>
      <if test="clientCategoryId != null" >
        client_category_id = #{clientCategoryId,jdbcType=INTEGER},
      </if>
      <if test="unitLevel != null" >
        unit_level = #{unitLevel,jdbcType=INTEGER},
      </if>
      <if test="unitName != null" >
        unit_name = #{unitName,jdbcType=INTEGER},
      </if>
      <if test="capacity != null" >
        capacity = #{capacity,jdbcType=INTEGER},
      </if>
      <if test="isMinUnit != null" >
        is_min_unit = #{isMinUnit,jdbcType=BIT},
      </if>
      <if test="minPrice != null" >
        min_price = #{minPrice,jdbcType=REAL},
      </if>
      <if test="salePrice != null" >
        sale_price = #{salePrice,jdbcType=REAL},
      </if>
      <if test="weight != null" >
        weight = #{weight,jdbcType=REAL},
      </if>
      <if test="volume != null" >
        volume = #{volume,jdbcType=REAL},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=BIT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lvsen.modules.business.pojo.GoodsUnit" >
    update goods_unit
    set goods_id = #{goodsId,jdbcType=INTEGER},
      is_scan = #{isScan,jdbcType=BIT},
      client_category_id = #{clientCategoryId,jdbcType=INTEGER},
      unit_level = #{unitLevel,jdbcType=INTEGER},
      unit_name = #{unitName,jdbcType=INTEGER},
      capacity = #{capacity,jdbcType=INTEGER},
      is_min_unit = #{isMinUnit,jdbcType=BIT},
      min_price = #{minPrice,jdbcType=REAL},
      sale_price = #{salePrice,jdbcType=REAL},
      weight = #{weight,jdbcType=REAL},
      volume = #{volume,jdbcType=REAL},
      status = #{status,jdbcType=BIT},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>