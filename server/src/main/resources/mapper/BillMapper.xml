<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.danny.lvsen.mapper.BillMapper">
  <resultMap id="BaseResultMap" type="com.danny.lvsen.pojo.Bill">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="client_id" jdbcType="INTEGER" property="clientId" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="payable_amount" jdbcType="REAL" property="payableAmount" />
    <result column="paid_amount" jdbcType="REAL" property="paidAmount" />
    <result column="status" jdbcType="BIT" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, client_id, order_id, payable_amount, paid_amount, status
  </sql>
  <select id="selectByExample" parameterType="com.danny.lvsen.pojo.BillExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bills
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bills
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from bills
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.danny.lvsen.pojo.BillExample">
    delete from bills
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.danny.lvsen.pojo.Bill" useGeneratedKeys="true">
    insert into bills (client_id, order_id, payable_amount, 
      paid_amount, status)
    values (#{clientId,jdbcType=INTEGER}, #{orderId,jdbcType=BIGINT}, #{payableAmount,jdbcType=REAL}, 
      #{paidAmount,jdbcType=REAL}, #{status,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.danny.lvsen.pojo.Bill" useGeneratedKeys="true">
    insert into bills
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="clientId != null">
        client_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="payableAmount != null">
        payable_amount,
      </if>
      <if test="paidAmount != null">
        paid_amount,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="clientId != null">
        #{clientId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="payableAmount != null">
        #{payableAmount,jdbcType=REAL},
      </if>
      <if test="paidAmount != null">
        #{paidAmount,jdbcType=REAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.danny.lvsen.pojo.BillExample" resultType="java.lang.Long">
    select count(*) from bills
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bills
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.clientId != null">
        client_id = #{record.clientId,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.payableAmount != null">
        payable_amount = #{record.payableAmount,jdbcType=REAL},
      </if>
      <if test="record.paidAmount != null">
        paid_amount = #{record.paidAmount,jdbcType=REAL},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bills
    set id = #{record.id,jdbcType=BIGINT},
      client_id = #{record.clientId,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=BIGINT},
      payable_amount = #{record.payableAmount,jdbcType=REAL},
      paid_amount = #{record.paidAmount,jdbcType=REAL},
      status = #{record.status,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.danny.lvsen.pojo.Bill">
    update bills
    <set>
      <if test="clientId != null">
        client_id = #{clientId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="payableAmount != null">
        payable_amount = #{payableAmount,jdbcType=REAL},
      </if>
      <if test="paidAmount != null">
        paid_amount = #{paidAmount,jdbcType=REAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.danny.lvsen.pojo.Bill">
    update bills
    set client_id = #{clientId,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=BIGINT},
      payable_amount = #{payableAmount,jdbcType=REAL},
      paid_amount = #{paidAmount,jdbcType=REAL},
      status = #{status,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>