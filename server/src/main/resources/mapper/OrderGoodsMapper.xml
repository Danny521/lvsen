<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.danny.lvsen.mapper.OrderGoodsMapper">
  <resultMap id="BaseResultMap" type="com.danny.lvsen.pojo.OrderGoods">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="unit_id" jdbcType="INTEGER" property="unitId" />
    <result column="spec" jdbcType="VARCHAR" property="spec" />
    <result column="total_number" jdbcType="INTEGER" property="totalNumber" />
    <result column="real_number" jdbcType="INTEGER" property="realNumber" />
    <result column="unit_tranfer" jdbcType="VARCHAR" property="unitTranfer" />
    <result column="price" jdbcType="REAL" property="price" />
    <result column="discount" jdbcType="REAL" property="discount" />
    <result column="sum" jdbcType="REAL" property="sum" />
    <result column="discount_price" jdbcType="REAL" property="discountPrice" />
    <result column="discount_sum" jdbcType="REAL" property="discountSum" />
    <result column="is_largess" jdbcType="VARCHAR" property="isLargess" />
    <result column="storage_id" jdbcType="VARCHAR" property="storageId" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_id, goods_id, unit_id, spec, total_number, real_number, unit_tranfer, price, 
    discount, sum, discount_price, discount_sum, is_largess, storage_id, comment
  </sql>
  <select id="selectByExample" parameterType="com.danny.lvsen.pojo.OrderGoodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_goods
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from order_goods
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.danny.lvsen.pojo.OrderGoodsExample">
    delete from order_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.danny.lvsen.pojo.OrderGoods" useGeneratedKeys="true">
    insert into order_goods (order_id, goods_id, unit_id, 
      spec, total_number, real_number, 
      unit_tranfer, price, discount, 
      sum, discount_price, discount_sum, 
      is_largess, storage_id, comment
      )
    values (#{orderId,jdbcType=BIGINT}, #{goodsId,jdbcType=INTEGER}, #{unitId,jdbcType=INTEGER}, 
      #{spec,jdbcType=VARCHAR}, #{totalNumber,jdbcType=INTEGER}, #{realNumber,jdbcType=INTEGER}, 
      #{unitTranfer,jdbcType=VARCHAR}, #{price,jdbcType=REAL}, #{discount,jdbcType=REAL}, 
      #{sum,jdbcType=REAL}, #{discountPrice,jdbcType=REAL}, #{discountSum,jdbcType=REAL}, 
      #{isLargess,jdbcType=VARCHAR}, #{storageId,jdbcType=VARCHAR}, #{comment,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.danny.lvsen.pojo.OrderGoods" useGeneratedKeys="true">
    insert into order_goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="spec != null">
        spec,
      </if>
      <if test="totalNumber != null">
        total_number,
      </if>
      <if test="realNumber != null">
        real_number,
      </if>
      <if test="unitTranfer != null">
        unit_tranfer,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="discount != null">
        discount,
      </if>
      <if test="sum != null">
        sum,
      </if>
      <if test="discountPrice != null">
        discount_price,
      </if>
      <if test="discountSum != null">
        discount_sum,
      </if>
      <if test="isLargess != null">
        is_largess,
      </if>
      <if test="storageId != null">
        storage_id,
      </if>
      <if test="comment != null">
        comment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=INTEGER},
      </if>
      <if test="spec != null">
        #{spec,jdbcType=VARCHAR},
      </if>
      <if test="totalNumber != null">
        #{totalNumber,jdbcType=INTEGER},
      </if>
      <if test="realNumber != null">
        #{realNumber,jdbcType=INTEGER},
      </if>
      <if test="unitTranfer != null">
        #{unitTranfer,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=REAL},
      </if>
      <if test="discount != null">
        #{discount,jdbcType=REAL},
      </if>
      <if test="sum != null">
        #{sum,jdbcType=REAL},
      </if>
      <if test="discountPrice != null">
        #{discountPrice,jdbcType=REAL},
      </if>
      <if test="discountSum != null">
        #{discountSum,jdbcType=REAL},
      </if>
      <if test="isLargess != null">
        #{isLargess,jdbcType=VARCHAR},
      </if>
      <if test="storageId != null">
        #{storageId,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.danny.lvsen.pojo.OrderGoodsExample" resultType="java.lang.Long">
    select count(*) from order_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order_goods
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.unitId != null">
        unit_id = #{record.unitId,jdbcType=INTEGER},
      </if>
      <if test="record.spec != null">
        spec = #{record.spec,jdbcType=VARCHAR},
      </if>
      <if test="record.totalNumber != null">
        total_number = #{record.totalNumber,jdbcType=INTEGER},
      </if>
      <if test="record.realNumber != null">
        real_number = #{record.realNumber,jdbcType=INTEGER},
      </if>
      <if test="record.unitTranfer != null">
        unit_tranfer = #{record.unitTranfer,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=REAL},
      </if>
      <if test="record.discount != null">
        discount = #{record.discount,jdbcType=REAL},
      </if>
      <if test="record.sum != null">
        sum = #{record.sum,jdbcType=REAL},
      </if>
      <if test="record.discountPrice != null">
        discount_price = #{record.discountPrice,jdbcType=REAL},
      </if>
      <if test="record.discountSum != null">
        discount_sum = #{record.discountSum,jdbcType=REAL},
      </if>
      <if test="record.isLargess != null">
        is_largess = #{record.isLargess,jdbcType=VARCHAR},
      </if>
      <if test="record.storageId != null">
        storage_id = #{record.storageId,jdbcType=VARCHAR},
      </if>
      <if test="record.comment != null">
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order_goods
    set id = #{record.id,jdbcType=BIGINT},
      order_id = #{record.orderId,jdbcType=BIGINT},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      unit_id = #{record.unitId,jdbcType=INTEGER},
      spec = #{record.spec,jdbcType=VARCHAR},
      total_number = #{record.totalNumber,jdbcType=INTEGER},
      real_number = #{record.realNumber,jdbcType=INTEGER},
      unit_tranfer = #{record.unitTranfer,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=REAL},
      discount = #{record.discount,jdbcType=REAL},
      sum = #{record.sum,jdbcType=REAL},
      discount_price = #{record.discountPrice,jdbcType=REAL},
      discount_sum = #{record.discountSum,jdbcType=REAL},
      is_largess = #{record.isLargess,jdbcType=VARCHAR},
      storage_id = #{record.storageId,jdbcType=VARCHAR},
      comment = #{record.comment,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.danny.lvsen.pojo.OrderGoods">
    update order_goods
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=INTEGER},
      </if>
      <if test="spec != null">
        spec = #{spec,jdbcType=VARCHAR},
      </if>
      <if test="totalNumber != null">
        total_number = #{totalNumber,jdbcType=INTEGER},
      </if>
      <if test="realNumber != null">
        real_number = #{realNumber,jdbcType=INTEGER},
      </if>
      <if test="unitTranfer != null">
        unit_tranfer = #{unitTranfer,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=REAL},
      </if>
      <if test="discount != null">
        discount = #{discount,jdbcType=REAL},
      </if>
      <if test="sum != null">
        sum = #{sum,jdbcType=REAL},
      </if>
      <if test="discountPrice != null">
        discount_price = #{discountPrice,jdbcType=REAL},
      </if>
      <if test="discountSum != null">
        discount_sum = #{discountSum,jdbcType=REAL},
      </if>
      <if test="isLargess != null">
        is_largess = #{isLargess,jdbcType=VARCHAR},
      </if>
      <if test="storageId != null">
        storage_id = #{storageId,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.danny.lvsen.pojo.OrderGoods">
    update order_goods
    set order_id = #{orderId,jdbcType=BIGINT},
      goods_id = #{goodsId,jdbcType=INTEGER},
      unit_id = #{unitId,jdbcType=INTEGER},
      spec = #{spec,jdbcType=VARCHAR},
      total_number = #{totalNumber,jdbcType=INTEGER},
      real_number = #{realNumber,jdbcType=INTEGER},
      unit_tranfer = #{unitTranfer,jdbcType=VARCHAR},
      price = #{price,jdbcType=REAL},
      discount = #{discount,jdbcType=REAL},
      sum = #{sum,jdbcType=REAL},
      discount_price = #{discountPrice,jdbcType=REAL},
      discount_sum = #{discountSum,jdbcType=REAL},
      is_largess = #{isLargess,jdbcType=VARCHAR},
      storage_id = #{storageId,jdbcType=VARCHAR},
      comment = #{comment,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>