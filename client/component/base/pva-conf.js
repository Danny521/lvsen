/**
 * 由于项目需求差异化越来越强，对于基线版本中的部分定制功能，需要做差异化配置
 */
/**
 * 定义全局公共变量
 */
var
/**
 * 基线版本：解决版本混乱问题,鉴于目前版本过于混乱，我们开发人员也不知道版本到多少了，所以特意加上版本号.
 * GNU 风格的版本号管理策略：
 * 1．项目初版本时 , 版本号可以为 0.1 或 0.1.0, 也可以为 1.0 或 1.0.0 ;
 * 2．当项目在进行了局部修改或 bug 修正时 , 主版本号和子版本号都不变 , 修正版本号加 1;
 * 3. 当项目在原有的基础上增加了部分功能时 , 主版本号不变 , 子版本号加 1, 修正版本号复位为 0, 因而可以被忽略掉 ;
 * 4．当项目在进行了重大修改或局部修正累积较多 , 而导致项目整体发生全局变化时 , 主版本号加 1;
 * 5．另外 , 编译版本号一般是编译器在编译过程中自动生成的 , 我们只定义其格式 , 并不进行人为控制 .
 **/
version = "1.0.0",
/**
 * 当前项目名称
 */
projectName = "lvsen-server",
/**
 * 当前程序版本的开发模式
 * develop：开发环境
 * production:生产环境
 */
projectMode = "production",
/**
 * PVA系统中网页标题的定制化修改
 * @type {string}
 */
htmlPageTitle = "实战平台",

/**
 * 主界面右上角的系统主题
 * @type {string}
 */
mainPageTitle = "实战平台",
/**
 * 假数据地址
 * @type {string}
 */
mockDataUrl = "https://7645fa68-453d-4896-994e-9dd0d714d488.mock.pstmn.io";